services:
  clozet-postgres:
    container_name: clozet-postgres
    image: postgres:13
    ports:
      - '5432:5432' # expose pg on port 5932 to not collide with pg from elsewhere
    restart: always
    volumes:
      - clozet_db_data:/var/lib/postgresql/data
    env_file: ./app/.env
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust

  nextjs-server:
    container_name: nextjs-server
    build:
      context: ./app
      dockerfile: ./Dockerfile
    ports:
      - '3000:3000'
      - '3001:3001'
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
      - nextjs_cache:/usr/src/app/.next
    env_file: ./app/.env
    depends_on:
      - clozet-postgres
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    # volumes:
    #   - ./nginx/nginx_conf.d/nginx.conf:/etc/nginx/nginx.conf:ro
    #   - /etc/ssl/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
    #   - /etc/ssl/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
    #   - /etc/ssl:/etc/nginx/ssl:ro
    restart: always
    build:
      context: ./nginx
      dockerfile: ./nginx/Dockerfile-alpine
    env_file:
      - ./nginx/.env
    volumes:                                    # Storage can be either a
      - nginx_secrets:/etc/letsencrypt          # Docker managed volume (see list at the bottom)
      - ./user_conf.d:/etc/nginx/user_conf.d    # or a host mount with a relative or full path.


volumes:
  clozet_db_data:
  nextjs_cache:
  nginx_secrets: